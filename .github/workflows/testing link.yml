name: Testing link ISO
run-name: Ch√†o m·ª´ng ${{ github.actor }} üöÄ

on:

  workflow_dispatch:
   inputs:
      
      os4:
        description: 'Nh·∫≠p link Direct Tr·ª±c ti·∫øp t·ªõi file ISO '
        required: true
      os5:
        description: 'Nh·∫≠p s·ªë GB dung l∆∞·ª£ng c·∫ßn thi·∫øt cho ·ªï ƒëƒ©a Windows. V√≠ d·ª•: 500G'
        required: true
      os6:
        description: 'S·ªë M ram c·∫ßn thi·∫øt. V√≠ d·ª•: 2048M'
        required: true
      
    

jobs:

  Dang_Chay:

    timeout-minutes: 9999999999999999999999999999999999999999999999

    runs-on: ubuntu-latest

    

    steps:

    - name: ƒêang ch·∫°y...

      run: |

            sleep 1
            echo ƒêang c√†i ƒë·∫∑t
            sudo apt update &>/dev/null
            sudo apt install qemu-utils qemu-system-x86 -y &>/dev/null
            echo ƒêang t·∫£i file Windows...
            wget -O windows.iso ${{ github.event.inputs.os4 }} &>/dev/null
            echo ƒêang t·∫°o file ƒëƒ©a theo √Ω c·ªßa b·∫°n
            qemu-img create -f raw windows.img ${{ github.event.inputs.os5 }}
            sudo apt install snapd -y &>/dev/null
            sudo snap install ngrok &>/dev/null
            ngrok authtoken 2Dz7GxtWt0jkp0YUkbD2T6EHUCO_3N5CgHH68US3GKe3fwT2o
            ngrok tcp 5900 &>/dev/null
            echo ƒê√£ ch·∫°y th√†nh c√¥ng!!!!!!!
            qemu-system-x86_64 -net nic -net user,hostfwd=tcp::3381-:3389 -m ${{ github.event.inputs.os5 }} -device usb-tablet -device usb-ehci,id=usb,bus=pci.0,addr=0x4 -cpu max,+nx -smp 2 -usbdevice tablet -k en-us -cdrom windows.iso -hda windows.img -vnc :0 -boot d
      timeout-minutes: 99999999999999999999999999999999999999999
